//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CampusBookMarket.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="User", Namespace="http://schemas.datacontract.org/2004/07/CampusService")]
    [System.SerializableAttribute()]
    public partial class User : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CampusBookMarket.ServiceReference1.Bid[] BidsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CampusBookMarket.ServiceReference1.Cart[] CartsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CampusBookMarket.ServiceReference1.Invoice[] InvoicesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CampusBookMarket.ServiceReference1.Product[] ProductsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CampusBookMarket.ServiceReference1.Product[] Products1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string emailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string nameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string passwordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime registrationDateField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CampusBookMarket.ServiceReference1.Bid[] Bids {
            get {
                return this.BidsField;
            }
            set {
                if ((object.ReferenceEquals(this.BidsField, value) != true)) {
                    this.BidsField = value;
                    this.RaisePropertyChanged("Bids");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CampusBookMarket.ServiceReference1.Cart[] Carts {
            get {
                return this.CartsField;
            }
            set {
                if ((object.ReferenceEquals(this.CartsField, value) != true)) {
                    this.CartsField = value;
                    this.RaisePropertyChanged("Carts");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CampusBookMarket.ServiceReference1.Invoice[] Invoices {
            get {
                return this.InvoicesField;
            }
            set {
                if ((object.ReferenceEquals(this.InvoicesField, value) != true)) {
                    this.InvoicesField = value;
                    this.RaisePropertyChanged("Invoices");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CampusBookMarket.ServiceReference1.Product[] Products {
            get {
                return this.ProductsField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductsField, value) != true)) {
                    this.ProductsField = value;
                    this.RaisePropertyChanged("Products");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CampusBookMarket.ServiceReference1.Product[] Products1 {
            get {
                return this.Products1Field;
            }
            set {
                if ((object.ReferenceEquals(this.Products1Field, value) != true)) {
                    this.Products1Field = value;
                    this.RaisePropertyChanged("Products1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string email {
            get {
                return this.emailField;
            }
            set {
                if ((object.ReferenceEquals(this.emailField, value) != true)) {
                    this.emailField = value;
                    this.RaisePropertyChanged("email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                if ((object.ReferenceEquals(this.nameField, value) != true)) {
                    this.nameField = value;
                    this.RaisePropertyChanged("name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string password {
            get {
                return this.passwordField;
            }
            set {
                if ((object.ReferenceEquals(this.passwordField, value) != true)) {
                    this.passwordField = value;
                    this.RaisePropertyChanged("password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime registrationDate {
            get {
                return this.registrationDateField;
            }
            set {
                if ((this.registrationDateField.Equals(value) != true)) {
                    this.registrationDateField = value;
                    this.RaisePropertyChanged("registrationDate");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Bid", Namespace="http://schemas.datacontract.org/2004/07/CampusService")]
    [System.SerializableAttribute()]
    public partial class Bid : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CampusBookMarket.ServiceReference1.Product ProductField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CampusBookMarket.ServiceReference1.User UserField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal bidAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime bidTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool isWinningBidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int productIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int userIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CampusBookMarket.ServiceReference1.Product Product {
            get {
                return this.ProductField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductField, value) != true)) {
                    this.ProductField = value;
                    this.RaisePropertyChanged("Product");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CampusBookMarket.ServiceReference1.User User {
            get {
                return this.UserField;
            }
            set {
                if ((object.ReferenceEquals(this.UserField, value) != true)) {
                    this.UserField = value;
                    this.RaisePropertyChanged("User");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal bidAmount {
            get {
                return this.bidAmountField;
            }
            set {
                if ((this.bidAmountField.Equals(value) != true)) {
                    this.bidAmountField = value;
                    this.RaisePropertyChanged("bidAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime bidTime {
            get {
                return this.bidTimeField;
            }
            set {
                if ((this.bidTimeField.Equals(value) != true)) {
                    this.bidTimeField = value;
                    this.RaisePropertyChanged("bidTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool isWinningBid {
            get {
                return this.isWinningBidField;
            }
            set {
                if ((this.isWinningBidField.Equals(value) != true)) {
                    this.isWinningBidField = value;
                    this.RaisePropertyChanged("isWinningBid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int productId {
            get {
                return this.productIdField;
            }
            set {
                if ((this.productIdField.Equals(value) != true)) {
                    this.productIdField = value;
                    this.RaisePropertyChanged("productId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int userId {
            get {
                return this.userIdField;
            }
            set {
                if ((this.userIdField.Equals(value) != true)) {
                    this.userIdField = value;
                    this.RaisePropertyChanged("userId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Cart", Namespace="http://schemas.datacontract.org/2004/07/CampusService")]
    [System.SerializableAttribute()]
    public partial class Cart : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CampusBookMarket.ServiceReference1.Product ProductField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CampusBookMarket.ServiceReference1.User UserField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime addedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int productIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int quantityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int userIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CampusBookMarket.ServiceReference1.Product Product {
            get {
                return this.ProductField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductField, value) != true)) {
                    this.ProductField = value;
                    this.RaisePropertyChanged("Product");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CampusBookMarket.ServiceReference1.User User {
            get {
                return this.UserField;
            }
            set {
                if ((object.ReferenceEquals(this.UserField, value) != true)) {
                    this.UserField = value;
                    this.RaisePropertyChanged("User");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime addedDate {
            get {
                return this.addedDateField;
            }
            set {
                if ((this.addedDateField.Equals(value) != true)) {
                    this.addedDateField = value;
                    this.RaisePropertyChanged("addedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int productId {
            get {
                return this.productIdField;
            }
            set {
                if ((this.productIdField.Equals(value) != true)) {
                    this.productIdField = value;
                    this.RaisePropertyChanged("productId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int quantity {
            get {
                return this.quantityField;
            }
            set {
                if ((this.quantityField.Equals(value) != true)) {
                    this.quantityField = value;
                    this.RaisePropertyChanged("quantity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int userId {
            get {
                return this.userIdField;
            }
            set {
                if ((this.userIdField.Equals(value) != true)) {
                    this.userIdField = value;
                    this.RaisePropertyChanged("userId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Invoice", Namespace="http://schemas.datacontract.org/2004/07/CampusService")]
    [System.SerializableAttribute()]
    public partial class Invoice : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CampusBookMarket.ServiceReference1.InvoiceLine[] InvoiceLinesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CampusBookMarket.ServiceReference1.User UserField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime dateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string statusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal totalPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int userIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CampusBookMarket.ServiceReference1.InvoiceLine[] InvoiceLines {
            get {
                return this.InvoiceLinesField;
            }
            set {
                if ((object.ReferenceEquals(this.InvoiceLinesField, value) != true)) {
                    this.InvoiceLinesField = value;
                    this.RaisePropertyChanged("InvoiceLines");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CampusBookMarket.ServiceReference1.User User {
            get {
                return this.UserField;
            }
            set {
                if ((object.ReferenceEquals(this.UserField, value) != true)) {
                    this.UserField = value;
                    this.RaisePropertyChanged("User");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime date {
            get {
                return this.dateField;
            }
            set {
                if ((this.dateField.Equals(value) != true)) {
                    this.dateField = value;
                    this.RaisePropertyChanged("date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string status {
            get {
                return this.statusField;
            }
            set {
                if ((object.ReferenceEquals(this.statusField, value) != true)) {
                    this.statusField = value;
                    this.RaisePropertyChanged("status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal totalPrice {
            get {
                return this.totalPriceField;
            }
            set {
                if ((this.totalPriceField.Equals(value) != true)) {
                    this.totalPriceField = value;
                    this.RaisePropertyChanged("totalPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int userId {
            get {
                return this.userIdField;
            }
            set {
                if ((this.userIdField.Equals(value) != true)) {
                    this.userIdField = value;
                    this.RaisePropertyChanged("userId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Product", Namespace="http://schemas.datacontract.org/2004/07/CampusService")]
    [System.SerializableAttribute()]
    public partial class Product : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CampusBookMarket.ServiceReference1.Bid[] BidsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CampusBookMarket.ServiceReference1.Cart[] CartsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CampusBookMarket.ServiceReference1.InvoiceLine[] InvoiceLinesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CampusBookMarket.ServiceReference1.User UserField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CampusBookMarket.ServiceReference1.User User1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int activeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string approvalStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string categoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> currentWinnerIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime dateAddedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> dateBidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string descriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string iconField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string nameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal priceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int quatityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> userIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CampusBookMarket.ServiceReference1.Bid[] Bids {
            get {
                return this.BidsField;
            }
            set {
                if ((object.ReferenceEquals(this.BidsField, value) != true)) {
                    this.BidsField = value;
                    this.RaisePropertyChanged("Bids");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CampusBookMarket.ServiceReference1.Cart[] Carts {
            get {
                return this.CartsField;
            }
            set {
                if ((object.ReferenceEquals(this.CartsField, value) != true)) {
                    this.CartsField = value;
                    this.RaisePropertyChanged("Carts");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CampusBookMarket.ServiceReference1.InvoiceLine[] InvoiceLines {
            get {
                return this.InvoiceLinesField;
            }
            set {
                if ((object.ReferenceEquals(this.InvoiceLinesField, value) != true)) {
                    this.InvoiceLinesField = value;
                    this.RaisePropertyChanged("InvoiceLines");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CampusBookMarket.ServiceReference1.User User {
            get {
                return this.UserField;
            }
            set {
                if ((object.ReferenceEquals(this.UserField, value) != true)) {
                    this.UserField = value;
                    this.RaisePropertyChanged("User");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CampusBookMarket.ServiceReference1.User User1 {
            get {
                return this.User1Field;
            }
            set {
                if ((object.ReferenceEquals(this.User1Field, value) != true)) {
                    this.User1Field = value;
                    this.RaisePropertyChanged("User1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int active {
            get {
                return this.activeField;
            }
            set {
                if ((this.activeField.Equals(value) != true)) {
                    this.activeField = value;
                    this.RaisePropertyChanged("active");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string approvalStatus {
            get {
                return this.approvalStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.approvalStatusField, value) != true)) {
                    this.approvalStatusField = value;
                    this.RaisePropertyChanged("approvalStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string category {
            get {
                return this.categoryField;
            }
            set {
                if ((object.ReferenceEquals(this.categoryField, value) != true)) {
                    this.categoryField = value;
                    this.RaisePropertyChanged("category");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> currentWinnerId {
            get {
                return this.currentWinnerIdField;
            }
            set {
                if ((this.currentWinnerIdField.Equals(value) != true)) {
                    this.currentWinnerIdField = value;
                    this.RaisePropertyChanged("currentWinnerId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime dateAdded {
            get {
                return this.dateAddedField;
            }
            set {
                if ((this.dateAddedField.Equals(value) != true)) {
                    this.dateAddedField = value;
                    this.RaisePropertyChanged("dateAdded");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> dateBid {
            get {
                return this.dateBidField;
            }
            set {
                if ((this.dateBidField.Equals(value) != true)) {
                    this.dateBidField = value;
                    this.RaisePropertyChanged("dateBid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.descriptionField, value) != true)) {
                    this.descriptionField = value;
                    this.RaisePropertyChanged("description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string icon {
            get {
                return this.iconField;
            }
            set {
                if ((object.ReferenceEquals(this.iconField, value) != true)) {
                    this.iconField = value;
                    this.RaisePropertyChanged("icon");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                if ((object.ReferenceEquals(this.nameField, value) != true)) {
                    this.nameField = value;
                    this.RaisePropertyChanged("name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal price {
            get {
                return this.priceField;
            }
            set {
                if ((this.priceField.Equals(value) != true)) {
                    this.priceField = value;
                    this.RaisePropertyChanged("price");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int quatity {
            get {
                return this.quatityField;
            }
            set {
                if ((this.quatityField.Equals(value) != true)) {
                    this.quatityField = value;
                    this.RaisePropertyChanged("quatity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> userId {
            get {
                return this.userIdField;
            }
            set {
                if ((this.userIdField.Equals(value) != true)) {
                    this.userIdField = value;
                    this.RaisePropertyChanged("userId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="InvoiceLine", Namespace="http://schemas.datacontract.org/2004/07/CampusService")]
    [System.SerializableAttribute()]
    public partial class InvoiceLine : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CampusBookMarket.ServiceReference1.Invoice InvoiceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CampusBookMarket.ServiceReference1.Product ProductField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int invoiceIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal priceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int productIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int quantityField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CampusBookMarket.ServiceReference1.Invoice Invoice {
            get {
                return this.InvoiceField;
            }
            set {
                if ((object.ReferenceEquals(this.InvoiceField, value) != true)) {
                    this.InvoiceField = value;
                    this.RaisePropertyChanged("Invoice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CampusBookMarket.ServiceReference1.Product Product {
            get {
                return this.ProductField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductField, value) != true)) {
                    this.ProductField = value;
                    this.RaisePropertyChanged("Product");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int invoiceId {
            get {
                return this.invoiceIdField;
            }
            set {
                if ((this.invoiceIdField.Equals(value) != true)) {
                    this.invoiceIdField = value;
                    this.RaisePropertyChanged("invoiceId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal price {
            get {
                return this.priceField;
            }
            set {
                if ((this.priceField.Equals(value) != true)) {
                    this.priceField = value;
                    this.RaisePropertyChanged("price");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int productId {
            get {
                return this.productIdField;
            }
            set {
                if ((this.productIdField.Equals(value) != true)) {
                    this.productIdField = value;
                    this.RaisePropertyChanged("productId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int quantity {
            get {
                return this.quantityField;
            }
            set {
                if ((this.quantityField.Equals(value) != true)) {
                    this.quantityField = value;
                    this.RaisePropertyChanged("quantity");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ReportData", Namespace="http://schemas.datacontract.org/2004/07/CampusService")]
    [System.SerializableAttribute()]
    public partial class ReportData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ActiveAuctionsCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ActiveUsersCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double AuctionSuccessRateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal AverageUserSpendField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal AverageWinningBidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BestSellingQuantityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CompletedAuctionsCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Data.DataTable DailyRegistrationsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Data.DataTable LowStockItemsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NewUsersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ProductsSoldCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Data.DataTable SalesByCategoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Data.DataTable StockByCategoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TopSpenderAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TotalOrdersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TotalRevenueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TotalStockCountField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ActiveAuctionsCount {
            get {
                return this.ActiveAuctionsCountField;
            }
            set {
                if ((this.ActiveAuctionsCountField.Equals(value) != true)) {
                    this.ActiveAuctionsCountField = value;
                    this.RaisePropertyChanged("ActiveAuctionsCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ActiveUsersCount {
            get {
                return this.ActiveUsersCountField;
            }
            set {
                if ((this.ActiveUsersCountField.Equals(value) != true)) {
                    this.ActiveUsersCountField = value;
                    this.RaisePropertyChanged("ActiveUsersCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double AuctionSuccessRate {
            get {
                return this.AuctionSuccessRateField;
            }
            set {
                if ((this.AuctionSuccessRateField.Equals(value) != true)) {
                    this.AuctionSuccessRateField = value;
                    this.RaisePropertyChanged("AuctionSuccessRate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal AverageUserSpend {
            get {
                return this.AverageUserSpendField;
            }
            set {
                if ((this.AverageUserSpendField.Equals(value) != true)) {
                    this.AverageUserSpendField = value;
                    this.RaisePropertyChanged("AverageUserSpend");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal AverageWinningBid {
            get {
                return this.AverageWinningBidField;
            }
            set {
                if ((this.AverageWinningBidField.Equals(value) != true)) {
                    this.AverageWinningBidField = value;
                    this.RaisePropertyChanged("AverageWinningBid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BestSellingQuantity {
            get {
                return this.BestSellingQuantityField;
            }
            set {
                if ((this.BestSellingQuantityField.Equals(value) != true)) {
                    this.BestSellingQuantityField = value;
                    this.RaisePropertyChanged("BestSellingQuantity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CompletedAuctionsCount {
            get {
                return this.CompletedAuctionsCountField;
            }
            set {
                if ((this.CompletedAuctionsCountField.Equals(value) != true)) {
                    this.CompletedAuctionsCountField = value;
                    this.RaisePropertyChanged("CompletedAuctionsCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Data.DataTable DailyRegistrations {
            get {
                return this.DailyRegistrationsField;
            }
            set {
                if ((object.ReferenceEquals(this.DailyRegistrationsField, value) != true)) {
                    this.DailyRegistrationsField = value;
                    this.RaisePropertyChanged("DailyRegistrations");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Data.DataTable LowStockItems {
            get {
                return this.LowStockItemsField;
            }
            set {
                if ((object.ReferenceEquals(this.LowStockItemsField, value) != true)) {
                    this.LowStockItemsField = value;
                    this.RaisePropertyChanged("LowStockItems");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NewUsers {
            get {
                return this.NewUsersField;
            }
            set {
                if ((this.NewUsersField.Equals(value) != true)) {
                    this.NewUsersField = value;
                    this.RaisePropertyChanged("NewUsers");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ProductsSoldCount {
            get {
                return this.ProductsSoldCountField;
            }
            set {
                if ((this.ProductsSoldCountField.Equals(value) != true)) {
                    this.ProductsSoldCountField = value;
                    this.RaisePropertyChanged("ProductsSoldCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Data.DataTable SalesByCategory {
            get {
                return this.SalesByCategoryField;
            }
            set {
                if ((object.ReferenceEquals(this.SalesByCategoryField, value) != true)) {
                    this.SalesByCategoryField = value;
                    this.RaisePropertyChanged("SalesByCategory");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Data.DataTable StockByCategory {
            get {
                return this.StockByCategoryField;
            }
            set {
                if ((object.ReferenceEquals(this.StockByCategoryField, value) != true)) {
                    this.StockByCategoryField = value;
                    this.RaisePropertyChanged("StockByCategory");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TopSpenderAmount {
            get {
                return this.TopSpenderAmountField;
            }
            set {
                if ((this.TopSpenderAmountField.Equals(value) != true)) {
                    this.TopSpenderAmountField = value;
                    this.RaisePropertyChanged("TopSpenderAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalOrders {
            get {
                return this.TotalOrdersField;
            }
            set {
                if ((this.TotalOrdersField.Equals(value) != true)) {
                    this.TotalOrdersField = value;
                    this.RaisePropertyChanged("TotalOrders");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TotalRevenue {
            get {
                return this.TotalRevenueField;
            }
            set {
                if ((this.TotalRevenueField.Equals(value) != true)) {
                    this.TotalRevenueField = value;
                    this.RaisePropertyChanged("TotalRevenue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalStockCount {
            get {
                return this.TotalStockCountField;
            }
            set {
                if ((this.TotalStockCountField.Equals(value) != true)) {
                    this.TotalStockCountField = value;
                    this.RaisePropertyChanged("TotalStockCount");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Login", ReplyAction="http://tempuri.org/IService1/LoginResponse")]
        int Login(string email, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Login", ReplyAction="http://tempuri.org/IService1/LoginResponse")]
        System.Threading.Tasks.Task<int> LoginAsync(string email, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Register", ReplyAction="http://tempuri.org/IService1/RegisterResponse")]
        int Register(CampusBookMarket.ServiceReference1.User argUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Register", ReplyAction="http://tempuri.org/IService1/RegisterResponse")]
        System.Threading.Tasks.Task<int> RegisterAsync(CampusBookMarket.ServiceReference1.User argUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getUser", ReplyAction="http://tempuri.org/IService1/getUserResponse")]
        CampusBookMarket.ServiceReference1.User getUser(string password, string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getUser", ReplyAction="http://tempuri.org/IService1/getUserResponse")]
        System.Threading.Tasks.Task<CampusBookMarket.ServiceReference1.User> getUserAsync(string password, string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddProduct", ReplyAction="http://tempuri.org/IService1/AddProductResponse")]
        int AddProduct(CampusBookMarket.ServiceReference1.Product product);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddProduct", ReplyAction="http://tempuri.org/IService1/AddProductResponse")]
        System.Threading.Tasks.Task<int> AddProductAsync(CampusBookMarket.ServiceReference1.Product product);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetProduct", ReplyAction="http://tempuri.org/IService1/GetProductResponse")]
        CampusBookMarket.ServiceReference1.Product GetProduct(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetProduct", ReplyAction="http://tempuri.org/IService1/GetProductResponse")]
        System.Threading.Tasks.Task<CampusBookMarket.ServiceReference1.Product> GetProductAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetProductByUserEmail", ReplyAction="http://tempuri.org/IService1/GetProductByUserEmailResponse")]
        CampusBookMarket.ServiceReference1.Product[] GetProductByUserEmail(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetProductByUserEmail", ReplyAction="http://tempuri.org/IService1/GetProductByUserEmailResponse")]
        System.Threading.Tasks.Task<CampusBookMarket.ServiceReference1.Product[]> GetProductByUserEmailAsync(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetProducts", ReplyAction="http://tempuri.org/IService1/GetProductsResponse")]
        CampusBookMarket.ServiceReference1.Product[] GetProducts();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetProducts", ReplyAction="http://tempuri.org/IService1/GetProductsResponse")]
        System.Threading.Tasks.Task<CampusBookMarket.ServiceReference1.Product[]> GetProductsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SearchProducts", ReplyAction="http://tempuri.org/IService1/SearchProductsResponse")]
        CampusBookMarket.ServiceReference1.Product[] SearchProducts(string searchTerm);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SearchProducts", ReplyAction="http://tempuri.org/IService1/SearchProductsResponse")]
        System.Threading.Tasks.Task<CampusBookMarket.ServiceReference1.Product[]> SearchProductsAsync(string searchTerm);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateProduct", ReplyAction="http://tempuri.org/IService1/UpdateProductResponse")]
        int UpdateProduct(CampusBookMarket.ServiceReference1.Product product);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateProduct", ReplyAction="http://tempuri.org/IService1/UpdateProductResponse")]
        System.Threading.Tasks.Task<int> UpdateProductAsync(CampusBookMarket.ServiceReference1.Product product);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/PlaceBid", ReplyAction="http://tempuri.org/IService1/PlaceBidResponse")]
        int PlaceBid(int productId, int userId, decimal bidAmount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/PlaceBid", ReplyAction="http://tempuri.org/IService1/PlaceBidResponse")]
        System.Threading.Tasks.Task<int> PlaceBidAsync(int productId, int userId, decimal bidAmount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetBidHistory", ReplyAction="http://tempuri.org/IService1/GetBidHistoryResponse")]
        CampusBookMarket.ServiceReference1.Bid[] GetBidHistory(int productId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetBidHistory", ReplyAction="http://tempuri.org/IService1/GetBidHistoryResponse")]
        System.Threading.Tasks.Task<CampusBookMarket.ServiceReference1.Bid[]> GetBidHistoryAsync(int productId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetUserBids", ReplyAction="http://tempuri.org/IService1/GetUserBidsResponse")]
        CampusBookMarket.ServiceReference1.Bid[] GetUserBids(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetUserBids", ReplyAction="http://tempuri.org/IService1/GetUserBidsResponse")]
        System.Threading.Tasks.Task<CampusBookMarket.ServiceReference1.Bid[]> GetUserBidsAsync(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetWinningBid", ReplyAction="http://tempuri.org/IService1/GetWinningBidResponse")]
        CampusBookMarket.ServiceReference1.Bid GetWinningBid(int productId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetWinningBid", ReplyAction="http://tempuri.org/IService1/GetWinningBidResponse")]
        System.Threading.Tasks.Task<CampusBookMarket.ServiceReference1.Bid> GetWinningBidAsync(int productId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/CompleteAuction", ReplyAction="http://tempuri.org/IService1/CompleteAuctionResponse")]
        int CompleteAuction(int productId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/CompleteAuction", ReplyAction="http://tempuri.org/IService1/CompleteAuctionResponse")]
        System.Threading.Tasks.Task<int> CompleteAuctionAsync(int productId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddToCart", ReplyAction="http://tempuri.org/IService1/AddToCartResponse")]
        int AddToCart(int userId, int productId, int quantity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddToCart", ReplyAction="http://tempuri.org/IService1/AddToCartResponse")]
        System.Threading.Tasks.Task<int> AddToCartAsync(int userId, int productId, int quantity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetUserCart", ReplyAction="http://tempuri.org/IService1/GetUserCartResponse")]
        CampusBookMarket.ServiceReference1.Cart[] GetUserCart(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetUserCart", ReplyAction="http://tempuri.org/IService1/GetUserCartResponse")]
        System.Threading.Tasks.Task<CampusBookMarket.ServiceReference1.Cart[]> GetUserCartAsync(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/RemoveFromCart", ReplyAction="http://tempuri.org/IService1/RemoveFromCartResponse")]
        int RemoveFromCart(int cartId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/RemoveFromCart", ReplyAction="http://tempuri.org/IService1/RemoveFromCartResponse")]
        System.Threading.Tasks.Task<int> RemoveFromCartAsync(int cartId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/CreateInvoice", ReplyAction="http://tempuri.org/IService1/CreateInvoiceResponse")]
        int CreateInvoice(int userId, decimal totalAmount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/CreateInvoice", ReplyAction="http://tempuri.org/IService1/CreateInvoiceResponse")]
        System.Threading.Tasks.Task<int> CreateInvoiceAsync(int userId, decimal totalAmount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddInvoiceLine", ReplyAction="http://tempuri.org/IService1/AddInvoiceLineResponse")]
        int AddInvoiceLine(int invoiceId, int productId, int quantity, decimal price);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddInvoiceLine", ReplyAction="http://tempuri.org/IService1/AddInvoiceLineResponse")]
        System.Threading.Tasks.Task<int> AddInvoiceLineAsync(int invoiceId, int productId, int quantity, decimal price);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetUserInvoices", ReplyAction="http://tempuri.org/IService1/GetUserInvoicesResponse")]
        CampusBookMarket.ServiceReference1.Invoice[] GetUserInvoices(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetUserInvoices", ReplyAction="http://tempuri.org/IService1/GetUserInvoicesResponse")]
        System.Threading.Tasks.Task<CampusBookMarket.ServiceReference1.Invoice[]> GetUserInvoicesAsync(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetProductsByUserId", ReplyAction="http://tempuri.org/IService1/GetProductsByUserIdResponse")]
        CampusBookMarket.ServiceReference1.Product[] GetProductsByUserId(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetProductsByUserId", ReplyAction="http://tempuri.org/IService1/GetProductsByUserIdResponse")]
        System.Threading.Tasks.Task<CampusBookMarket.ServiceReference1.Product[]> GetProductsByUserIdAsync(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetProductsForApproval", ReplyAction="http://tempuri.org/IService1/GetProductsForApprovalResponse")]
        CampusBookMarket.ServiceReference1.Product[] GetProductsForApproval();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetProductsForApproval", ReplyAction="http://tempuri.org/IService1/GetProductsForApprovalResponse")]
        System.Threading.Tasks.Task<CampusBookMarket.ServiceReference1.Product[]> GetProductsForApprovalAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ApproveProduct", ReplyAction="http://tempuri.org/IService1/ApproveProductResponse")]
        int ApproveProduct(int productId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ApproveProduct", ReplyAction="http://tempuri.org/IService1/ApproveProductResponse")]
        System.Threading.Tasks.Task<int> ApproveProductAsync(int productId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/RejectProduct", ReplyAction="http://tempuri.org/IService1/RejectProductResponse")]
        int RejectProduct(int productId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/RejectProduct", ReplyAction="http://tempuri.org/IService1/RejectProductResponse")]
        System.Threading.Tasks.Task<int> RejectProductAsync(int productId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetProductsSoldCount", ReplyAction="http://tempuri.org/IService1/GetProductsSoldCountResponse")]
        int GetProductsSoldCount(System.DateTime startDate, System.DateTime endDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetProductsSoldCount", ReplyAction="http://tempuri.org/IService1/GetProductsSoldCountResponse")]
        System.Threading.Tasks.Task<int> GetProductsSoldCountAsync(System.DateTime startDate, System.DateTime endDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetTotalStockCount", ReplyAction="http://tempuri.org/IService1/GetTotalStockCountResponse")]
        int GetTotalStockCount();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetTotalStockCount", ReplyAction="http://tempuri.org/IService1/GetTotalStockCountResponse")]
        System.Threading.Tasks.Task<int> GetTotalStockCountAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetTotalRevenue", ReplyAction="http://tempuri.org/IService1/GetTotalRevenueResponse")]
        decimal GetTotalRevenue(System.DateTime startDate, System.DateTime endDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetTotalRevenue", ReplyAction="http://tempuri.org/IService1/GetTotalRevenueResponse")]
        System.Threading.Tasks.Task<decimal> GetTotalRevenueAsync(System.DateTime startDate, System.DateTime endDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetSalesByCategory", ReplyAction="http://tempuri.org/IService1/GetSalesByCategoryResponse")]
        System.Data.DataTable GetSalesByCategory(System.DateTime startDate, System.DateTime endDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetSalesByCategory", ReplyAction="http://tempuri.org/IService1/GetSalesByCategoryResponse")]
        System.Threading.Tasks.Task<System.Data.DataTable> GetSalesByCategoryAsync(System.DateTime startDate, System.DateTime endDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetLowStockProducts", ReplyAction="http://tempuri.org/IService1/GetLowStockProductsResponse")]
        System.Data.DataTable GetLowStockProducts(int threshold);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetLowStockProducts", ReplyAction="http://tempuri.org/IService1/GetLowStockProductsResponse")]
        System.Threading.Tasks.Task<System.Data.DataTable> GetLowStockProductsAsync(int threshold);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetStockByCategory", ReplyAction="http://tempuri.org/IService1/GetStockByCategoryResponse")]
        System.Data.DataTable GetStockByCategory();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetStockByCategory", ReplyAction="http://tempuri.org/IService1/GetStockByCategoryResponse")]
        System.Threading.Tasks.Task<System.Data.DataTable> GetStockByCategoryAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetActiveUsersCount", ReplyAction="http://tempuri.org/IService1/GetActiveUsersCountResponse")]
        int GetActiveUsersCount(System.DateTime startDate, System.DateTime endDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetActiveUsersCount", ReplyAction="http://tempuri.org/IService1/GetActiveUsersCountResponse")]
        System.Threading.Tasks.Task<int> GetActiveUsersCountAsync(System.DateTime startDate, System.DateTime endDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetTopSpenderAmount", ReplyAction="http://tempuri.org/IService1/GetTopSpenderAmountResponse")]
        decimal GetTopSpenderAmount(System.DateTime startDate, System.DateTime endDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetTopSpenderAmount", ReplyAction="http://tempuri.org/IService1/GetTopSpenderAmountResponse")]
        System.Threading.Tasks.Task<decimal> GetTopSpenderAmountAsync(System.DateTime startDate, System.DateTime endDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAverageUserSpend", ReplyAction="http://tempuri.org/IService1/GetAverageUserSpendResponse")]
        decimal GetAverageUserSpend(System.DateTime startDate, System.DateTime endDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAverageUserSpend", ReplyAction="http://tempuri.org/IService1/GetAverageUserSpendResponse")]
        System.Threading.Tasks.Task<decimal> GetAverageUserSpendAsync(System.DateTime startDate, System.DateTime endDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetActiveAuctionsCount", ReplyAction="http://tempuri.org/IService1/GetActiveAuctionsCountResponse")]
        int GetActiveAuctionsCount();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetActiveAuctionsCount", ReplyAction="http://tempuri.org/IService1/GetActiveAuctionsCountResponse")]
        System.Threading.Tasks.Task<int> GetActiveAuctionsCountAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetCompletedAuctionsCount", ReplyAction="http://tempuri.org/IService1/GetCompletedAuctionsCountResponse")]
        int GetCompletedAuctionsCount(System.DateTime startDate, System.DateTime endDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetCompletedAuctionsCount", ReplyAction="http://tempuri.org/IService1/GetCompletedAuctionsCountResponse")]
        System.Threading.Tasks.Task<int> GetCompletedAuctionsCountAsync(System.DateTime startDate, System.DateTime endDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAverageWinningBid", ReplyAction="http://tempuri.org/IService1/GetAverageWinningBidResponse")]
        decimal GetAverageWinningBid(System.DateTime startDate, System.DateTime endDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAverageWinningBid", ReplyAction="http://tempuri.org/IService1/GetAverageWinningBidResponse")]
        System.Threading.Tasks.Task<decimal> GetAverageWinningBidAsync(System.DateTime startDate, System.DateTime endDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAuctionSuccessRate", ReplyAction="http://tempuri.org/IService1/GetAuctionSuccessRateResponse")]
        double GetAuctionSuccessRate(System.DateTime startDate, System.DateTime endDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAuctionSuccessRate", ReplyAction="http://tempuri.org/IService1/GetAuctionSuccessRateResponse")]
        System.Threading.Tasks.Task<double> GetAuctionSuccessRateAsync(System.DateTime startDate, System.DateTime endDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetDailyRegistrationsReport", ReplyAction="http://tempuri.org/IService1/GetDailyRegistrationsReportResponse")]
        System.Data.DataTable GetDailyRegistrationsReport(System.DateTime startDate, System.DateTime endDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetDailyRegistrationsReport", ReplyAction="http://tempuri.org/IService1/GetDailyRegistrationsReportResponse")]
        System.Threading.Tasks.Task<System.Data.DataTable> GetDailyRegistrationsReportAsync(System.DateTime startDate, System.DateTime endDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getReportData", ReplyAction="http://tempuri.org/IService1/getReportDataResponse")]
        CampusBookMarket.ServiceReference1.ReportData getReportData(System.DateTime startDate, System.DateTime endDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getReportData", ReplyAction="http://tempuri.org/IService1/getReportDataResponse")]
        System.Threading.Tasks.Task<CampusBookMarket.ServiceReference1.ReportData> getReportDataAsync(System.DateTime startDate, System.DateTime endDate);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : CampusBookMarket.ServiceReference1.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<CampusBookMarket.ServiceReference1.IService1>, CampusBookMarket.ServiceReference1.IService1 {
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public int Login(string email, string password) {
            return base.Channel.Login(email, password);
        }
        
        public System.Threading.Tasks.Task<int> LoginAsync(string email, string password) {
            return base.Channel.LoginAsync(email, password);
        }
        
        public int Register(CampusBookMarket.ServiceReference1.User argUser) {
            return base.Channel.Register(argUser);
        }
        
        public System.Threading.Tasks.Task<int> RegisterAsync(CampusBookMarket.ServiceReference1.User argUser) {
            return base.Channel.RegisterAsync(argUser);
        }
        
        public CampusBookMarket.ServiceReference1.User getUser(string password, string email) {
            return base.Channel.getUser(password, email);
        }
        
        public System.Threading.Tasks.Task<CampusBookMarket.ServiceReference1.User> getUserAsync(string password, string email) {
            return base.Channel.getUserAsync(password, email);
        }
        
        public int AddProduct(CampusBookMarket.ServiceReference1.Product product) {
            return base.Channel.AddProduct(product);
        }
        
        public System.Threading.Tasks.Task<int> AddProductAsync(CampusBookMarket.ServiceReference1.Product product) {
            return base.Channel.AddProductAsync(product);
        }
        
        public CampusBookMarket.ServiceReference1.Product GetProduct(int id) {
            return base.Channel.GetProduct(id);
        }
        
        public System.Threading.Tasks.Task<CampusBookMarket.ServiceReference1.Product> GetProductAsync(int id) {
            return base.Channel.GetProductAsync(id);
        }
        
        public CampusBookMarket.ServiceReference1.Product[] GetProductByUserEmail(string email) {
            return base.Channel.GetProductByUserEmail(email);
        }
        
        public System.Threading.Tasks.Task<CampusBookMarket.ServiceReference1.Product[]> GetProductByUserEmailAsync(string email) {
            return base.Channel.GetProductByUserEmailAsync(email);
        }
        
        public CampusBookMarket.ServiceReference1.Product[] GetProducts() {
            return base.Channel.GetProducts();
        }
        
        public System.Threading.Tasks.Task<CampusBookMarket.ServiceReference1.Product[]> GetProductsAsync() {
            return base.Channel.GetProductsAsync();
        }
        
        public CampusBookMarket.ServiceReference1.Product[] SearchProducts(string searchTerm) {
            return base.Channel.SearchProducts(searchTerm);
        }
        
        public System.Threading.Tasks.Task<CampusBookMarket.ServiceReference1.Product[]> SearchProductsAsync(string searchTerm) {
            return base.Channel.SearchProductsAsync(searchTerm);
        }
        
        public int UpdateProduct(CampusBookMarket.ServiceReference1.Product product) {
            return base.Channel.UpdateProduct(product);
        }
        
        public System.Threading.Tasks.Task<int> UpdateProductAsync(CampusBookMarket.ServiceReference1.Product product) {
            return base.Channel.UpdateProductAsync(product);
        }
        
        public int PlaceBid(int productId, int userId, decimal bidAmount) {
            return base.Channel.PlaceBid(productId, userId, bidAmount);
        }
        
        public System.Threading.Tasks.Task<int> PlaceBidAsync(int productId, int userId, decimal bidAmount) {
            return base.Channel.PlaceBidAsync(productId, userId, bidAmount);
        }
        
        public CampusBookMarket.ServiceReference1.Bid[] GetBidHistory(int productId) {
            return base.Channel.GetBidHistory(productId);
        }
        
        public System.Threading.Tasks.Task<CampusBookMarket.ServiceReference1.Bid[]> GetBidHistoryAsync(int productId) {
            return base.Channel.GetBidHistoryAsync(productId);
        }
        
        public CampusBookMarket.ServiceReference1.Bid[] GetUserBids(int userId) {
            return base.Channel.GetUserBids(userId);
        }
        
        public System.Threading.Tasks.Task<CampusBookMarket.ServiceReference1.Bid[]> GetUserBidsAsync(int userId) {
            return base.Channel.GetUserBidsAsync(userId);
        }
        
        public CampusBookMarket.ServiceReference1.Bid GetWinningBid(int productId) {
            return base.Channel.GetWinningBid(productId);
        }
        
        public System.Threading.Tasks.Task<CampusBookMarket.ServiceReference1.Bid> GetWinningBidAsync(int productId) {
            return base.Channel.GetWinningBidAsync(productId);
        }
        
        public int CompleteAuction(int productId) {
            return base.Channel.CompleteAuction(productId);
        }
        
        public System.Threading.Tasks.Task<int> CompleteAuctionAsync(int productId) {
            return base.Channel.CompleteAuctionAsync(productId);
        }
        
        public int AddToCart(int userId, int productId, int quantity) {
            return base.Channel.AddToCart(userId, productId, quantity);
        }
        
        public System.Threading.Tasks.Task<int> AddToCartAsync(int userId, int productId, int quantity) {
            return base.Channel.AddToCartAsync(userId, productId, quantity);
        }
        
        public CampusBookMarket.ServiceReference1.Cart[] GetUserCart(int userId) {
            return base.Channel.GetUserCart(userId);
        }
        
        public System.Threading.Tasks.Task<CampusBookMarket.ServiceReference1.Cart[]> GetUserCartAsync(int userId) {
            return base.Channel.GetUserCartAsync(userId);
        }
        
        public int RemoveFromCart(int cartId) {
            return base.Channel.RemoveFromCart(cartId);
        }
        
        public System.Threading.Tasks.Task<int> RemoveFromCartAsync(int cartId) {
            return base.Channel.RemoveFromCartAsync(cartId);
        }
        
        public int CreateInvoice(int userId, decimal totalAmount) {
            return base.Channel.CreateInvoice(userId, totalAmount);
        }
        
        public System.Threading.Tasks.Task<int> CreateInvoiceAsync(int userId, decimal totalAmount) {
            return base.Channel.CreateInvoiceAsync(userId, totalAmount);
        }
        
        public int AddInvoiceLine(int invoiceId, int productId, int quantity, decimal price) {
            return base.Channel.AddInvoiceLine(invoiceId, productId, quantity, price);
        }
        
        public System.Threading.Tasks.Task<int> AddInvoiceLineAsync(int invoiceId, int productId, int quantity, decimal price) {
            return base.Channel.AddInvoiceLineAsync(invoiceId, productId, quantity, price);
        }
        
        public CampusBookMarket.ServiceReference1.Invoice[] GetUserInvoices(int userId) {
            return base.Channel.GetUserInvoices(userId);
        }
        
        public System.Threading.Tasks.Task<CampusBookMarket.ServiceReference1.Invoice[]> GetUserInvoicesAsync(int userId) {
            return base.Channel.GetUserInvoicesAsync(userId);
        }
        
        public CampusBookMarket.ServiceReference1.Product[] GetProductsByUserId(int userId) {
            return base.Channel.GetProductsByUserId(userId);
        }
        
        public System.Threading.Tasks.Task<CampusBookMarket.ServiceReference1.Product[]> GetProductsByUserIdAsync(int userId) {
            return base.Channel.GetProductsByUserIdAsync(userId);
        }
        
        public CampusBookMarket.ServiceReference1.Product[] GetProductsForApproval() {
            return base.Channel.GetProductsForApproval();
        }
        
        public System.Threading.Tasks.Task<CampusBookMarket.ServiceReference1.Product[]> GetProductsForApprovalAsync() {
            return base.Channel.GetProductsForApprovalAsync();
        }
        
        public int ApproveProduct(int productId) {
            return base.Channel.ApproveProduct(productId);
        }
        
        public System.Threading.Tasks.Task<int> ApproveProductAsync(int productId) {
            return base.Channel.ApproveProductAsync(productId);
        }
        
        public int RejectProduct(int productId) {
            return base.Channel.RejectProduct(productId);
        }
        
        public System.Threading.Tasks.Task<int> RejectProductAsync(int productId) {
            return base.Channel.RejectProductAsync(productId);
        }
        
        public int GetProductsSoldCount(System.DateTime startDate, System.DateTime endDate) {
            return base.Channel.GetProductsSoldCount(startDate, endDate);
        }
        
        public System.Threading.Tasks.Task<int> GetProductsSoldCountAsync(System.DateTime startDate, System.DateTime endDate) {
            return base.Channel.GetProductsSoldCountAsync(startDate, endDate);
        }
        
        public int GetTotalStockCount() {
            return base.Channel.GetTotalStockCount();
        }
        
        public System.Threading.Tasks.Task<int> GetTotalStockCountAsync() {
            return base.Channel.GetTotalStockCountAsync();
        }
        
        public decimal GetTotalRevenue(System.DateTime startDate, System.DateTime endDate) {
            return base.Channel.GetTotalRevenue(startDate, endDate);
        }
        
        public System.Threading.Tasks.Task<decimal> GetTotalRevenueAsync(System.DateTime startDate, System.DateTime endDate) {
            return base.Channel.GetTotalRevenueAsync(startDate, endDate);
        }
        
        public System.Data.DataTable GetSalesByCategory(System.DateTime startDate, System.DateTime endDate) {
            return base.Channel.GetSalesByCategory(startDate, endDate);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> GetSalesByCategoryAsync(System.DateTime startDate, System.DateTime endDate) {
            return base.Channel.GetSalesByCategoryAsync(startDate, endDate);
        }
        
        public System.Data.DataTable GetLowStockProducts(int threshold) {
            return base.Channel.GetLowStockProducts(threshold);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> GetLowStockProductsAsync(int threshold) {
            return base.Channel.GetLowStockProductsAsync(threshold);
        }
        
        public System.Data.DataTable GetStockByCategory() {
            return base.Channel.GetStockByCategory();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> GetStockByCategoryAsync() {
            return base.Channel.GetStockByCategoryAsync();
        }
        
        public int GetActiveUsersCount(System.DateTime startDate, System.DateTime endDate) {
            return base.Channel.GetActiveUsersCount(startDate, endDate);
        }
        
        public System.Threading.Tasks.Task<int> GetActiveUsersCountAsync(System.DateTime startDate, System.DateTime endDate) {
            return base.Channel.GetActiveUsersCountAsync(startDate, endDate);
        }
        
        public decimal GetTopSpenderAmount(System.DateTime startDate, System.DateTime endDate) {
            return base.Channel.GetTopSpenderAmount(startDate, endDate);
        }
        
        public System.Threading.Tasks.Task<decimal> GetTopSpenderAmountAsync(System.DateTime startDate, System.DateTime endDate) {
            return base.Channel.GetTopSpenderAmountAsync(startDate, endDate);
        }
        
        public decimal GetAverageUserSpend(System.DateTime startDate, System.DateTime endDate) {
            return base.Channel.GetAverageUserSpend(startDate, endDate);
        }
        
        public System.Threading.Tasks.Task<decimal> GetAverageUserSpendAsync(System.DateTime startDate, System.DateTime endDate) {
            return base.Channel.GetAverageUserSpendAsync(startDate, endDate);
        }
        
        public int GetActiveAuctionsCount() {
            return base.Channel.GetActiveAuctionsCount();
        }
        
        public System.Threading.Tasks.Task<int> GetActiveAuctionsCountAsync() {
            return base.Channel.GetActiveAuctionsCountAsync();
        }
        
        public int GetCompletedAuctionsCount(System.DateTime startDate, System.DateTime endDate) {
            return base.Channel.GetCompletedAuctionsCount(startDate, endDate);
        }
        
        public System.Threading.Tasks.Task<int> GetCompletedAuctionsCountAsync(System.DateTime startDate, System.DateTime endDate) {
            return base.Channel.GetCompletedAuctionsCountAsync(startDate, endDate);
        }
        
        public decimal GetAverageWinningBid(System.DateTime startDate, System.DateTime endDate) {
            return base.Channel.GetAverageWinningBid(startDate, endDate);
        }
        
        public System.Threading.Tasks.Task<decimal> GetAverageWinningBidAsync(System.DateTime startDate, System.DateTime endDate) {
            return base.Channel.GetAverageWinningBidAsync(startDate, endDate);
        }
        
        public double GetAuctionSuccessRate(System.DateTime startDate, System.DateTime endDate) {
            return base.Channel.GetAuctionSuccessRate(startDate, endDate);
        }
        
        public System.Threading.Tasks.Task<double> GetAuctionSuccessRateAsync(System.DateTime startDate, System.DateTime endDate) {
            return base.Channel.GetAuctionSuccessRateAsync(startDate, endDate);
        }
        
        public System.Data.DataTable GetDailyRegistrationsReport(System.DateTime startDate, System.DateTime endDate) {
            return base.Channel.GetDailyRegistrationsReport(startDate, endDate);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> GetDailyRegistrationsReportAsync(System.DateTime startDate, System.DateTime endDate) {
            return base.Channel.GetDailyRegistrationsReportAsync(startDate, endDate);
        }
        
        public CampusBookMarket.ServiceReference1.ReportData getReportData(System.DateTime startDate, System.DateTime endDate) {
            return base.Channel.getReportData(startDate, endDate);
        }
        
        public System.Threading.Tasks.Task<CampusBookMarket.ServiceReference1.ReportData> getReportDataAsync(System.DateTime startDate, System.DateTime endDate) {
            return base.Channel.getReportDataAsync(startDate, endDate);
        }
    }
}
